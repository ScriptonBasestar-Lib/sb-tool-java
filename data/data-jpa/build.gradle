dependencies {
	compile project(":crypto")
	compile project(':transfer')

	compile("org.springframework.boot:spring-boot-starter-data-jpa:$spring_boot_version"){
		exclude group: 'org.hibernate', module: 'hibernate-core'
		exclude group: 'org.hibernate', module: 'hibernate-entitymanager'
		exclude group: 'org.hibernate', module: 'hibernate-envers'
	}

	compile "org.apache.commons:commons-lang3:$commons_lang3_version"
	compile "org.jodd:jodd-core:$jodd_core_version"

	compile "org.hibernate:hibernate-core:$hibernate_version"
	compile "org.hibernate:hibernate-entitymanager:$hibernate_version"
	compile "org.hibernate:hibernate-envers:$hibernate_version"

	compile "org.projectlombok:lombok:$lombok_version"
	//querydsl
	compile "com.querydsl:querydsl-core:$querydsl_version"
	compile "com.querydsl:querydsl-apt:$querydsl_version"
	compile "com.querydsl:querydsl-jpa:$querydsl_version"

}


sourceSets {
	main.java.srcDirs = ['src/main/java', "src/main/generated"]
	test.java.srcDirs = ['src/test/java', "src/test/generated"]
	generated.java.srcDirs = ["src/main/generated"]
	testGenerated.java.srcDirs = ["src/test/generated"]
}

task generateQueryDSL(type: JavaCompile, group: 'build', description: 'Generates the QueryDSL query types') {
//	delete sourceSets.generated.java.srcDirs
	source = sourceSets.main.java
	classpath = configurations.compile
	options.compilerArgs = [
			"-proc:only",
			"-processor", "com.querydsl.apt.jpa.JPAAnnotationProcessor"
	]
	destinationDir = sourceSets.generated.java.srcDirs.iterator().next()
}
compileJava {
	dependsOn generateQueryDSL
	source += generateQueryDSL.destinationDir
}
compileGeneratedJava {
	dependsOn generateQueryDSL
	options.warnings = false
	classpath += sourceSets.main.runtimeClasspath
}

task testGenerateQueryDSL(type: JavaCompile, group: 'verification', description: 'Generates the Test QueryDSL query types') {
//	delete sourceSets.testGenerated.java.srcDirs
	source = [sourceSets.test.java]
	classpath = configurations.testCompile
	options.compilerArgs = [
			"-proc:only",
			"-processor", "com.querydsl.apt.jpa.JPAAnnotationProcessor"
	]
	destinationDir = sourceSets.testGenerated.java.srcDirs.iterator().next()
}
compileTestJava {
	dependsOn testGenerateQueryDSL
	source += testGenerateQueryDSL.destinationDir
}
compileTestGeneratedJava {
	dependsOn testGenerateQueryDSL
	options.warnings = false
	classpath += sourceSets.test.runtimeClasspath
}

clean {
	delete sourceSets.generated.java.srcDirs
	delete sourceSets.testGenerated.java.srcDirs
}
idea {
	module {
		sourceDirs += file("$projectDir/src/main/generated")
		testSourceDirs += file("$projectDir/src/test/generated")
	}
}
